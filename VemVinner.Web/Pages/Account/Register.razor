@page "/account/register"

@using VemVinner.Service;
@using VemVinner.Domain.Account;

@inject IAccountService AccountService
@inject IAlertService AlertService
@inject NavigationManager NavigationManager

<div class="card">
    <h4 class="card-header">Register</h4>
    <div class="card-body">
        <EditForm Model="@registerUser" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Användarnamn</label>
                <InputText @bind-Value="registerUser.Username" class="form-control" />
                <ValidationMessage For="@(() => registerUser.Username)" />
            </div>
            <div class="form-group">
                <label>Lösenord</label>
                <InputText @bind-Value="registerUser.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => registerUser.Password)" />
            </div>
            <button disabled="@loading" class="btn btn-primary">
                @if (loading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Registrera
            </button>
            <NavLink href="account/login" class="btn btn-link">Avbryt</NavLink>
        </EditForm>
    </div>
</div>

@code {
    private RegisterUserDTO registerUser = new RegisterUserDTO();
    private bool loading;

    private async void OnValidSubmit()
    {
        AlertService.Clear();

        loading = true;
        StateHasChanged();

        var userExists = await AccountService.UserExists(registerUser.Username);
        if (userExists == false)
        {
            await AccountService.Register(registerUser);
            AlertService.Success("Du är nu registrerad!", keepAfterRouteChange: true);

            NavigationManager.NavigateTo($"account/login/{registerUser.Username}");
        }
        else
        {
            AlertService.Error("Användarnamnet finns redan");
        }

        loading = false;
        StateHasChanged();
    }
}